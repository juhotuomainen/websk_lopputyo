const { google } = require('googleapis');
const express = require('express')
const OAuth2Data = require('./google_key.json')
//passport käyttöön
const passport = require('passport');
// määritellään Express app-muuttujan kautta
const app = express.Router();
// Googlen kontrolleritiedosto googleController.js käyttöön requirella
const googleController = require('../controllers/googleController');
// määritellään tilin ID kutsumalla sitä oauth2Data-muuttujan client-aliluokan secret-ominaisuuden kautta.
const CLIENT_ID = OAuth2Data.client.id;
const CLIENT_SECRET = OAuth2Data.client.secret;
const REDIRECT_URL = OAuth2Data.client.redirect

const oAuth2Client = new google.auth.OAuth2(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);
let authed = false;
// reittien määrittelyä (harjoitus 19)
// Google-authentikaatioreittti
// etusivun reitti
app.get('/', googleController.renderoiSivu);
// Profiilisivun näyttöreitti
app.get('/profile', googleController.renderoiProfiilisivu);
/* kirjautumisreitti. Ensimmäinen parametri get-HTTP-verbiä käyttävälle on reitti, toinen passport-funktion authentikointi, jolla on kaksi parametria. Ensin on heittomerkeissä tunnistettava taho (google) ja toinen olio, jonka avaimena scope ja arvona on merkkijonot profile ja email sisältävä taulukko. Lisäksi neljäntenä parametrina non funktio, jossa käsitellään käyttäjän kirjautuminen. Jos hänen tunnistautgumisensa e9i onnistu (if ! authed), etsitään Gmail rajapinta ja tulostetaan URL-osoite myös konsoliin. Muutoin käyttäjä päästetään sisään tekemään haluamiaan asioita. */
app.get('/auth/google', googleController.googleAuth);
/* Callback-funktio, johon käyttäjä ohjataan tunnistautumisen (authentikaatio) jälkeen. Käytännössä hänet ohjataan suoraan profile-sivulle, jolla hänen tietonsa näkyvät. Ensimmäinen parametri on heittomerkkien sisässä oleva reitti, toinen passport-luokan authenticate-metodin kutsu, jolla on kaksi parametria: heittomerkkien sisässä tunnistettava taho (google) ja toisena parametrina olio. Se sisältää kaksi avainta (onnistuneen uudelleenohjauksen uloskirjauduttaessa (avain successRedirect) ja epäonnistuneen uudeleenohjauksen uloskirjauduttaessa (avain failureRedirect)). Niiden arvot ovat heittomerkkien sisään kirjoitettuja (ensimmäisen arvona "google" ja jälkimmäisen "/". Näiden jälkeen on loppuaalto, loppusulku ja sen vuoksi, että callback-reitin parametrilista jatkuu. Neljäntenä parametrina on Gmail APIa käsittelevä funktio, jonka parametrit ovat tutut req ja res. Nykyisin tässä on vain app-muuttujan kautta kutsuttu reitinteko (http-verbinä get). ja parametrit sulkujen sisässä: ensin heittomerkeissä osoite ja sitten metodi, joka löytyy googleController.js-tiedostosta ja jota kutsutaan googleController-muuttujan kautta. */
app.get('/auth/google/callback', googleController.callbackToiminto);
// uloskirjausreitti.
app.get('/logout', googleController.logout);

module.exports = app;